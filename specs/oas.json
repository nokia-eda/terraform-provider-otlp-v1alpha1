{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterMetricExport": {
        "description": "ClusterMetricExport is the Schema for the clustermetricexports API",
        "properties": {
          "apiVersion": {
            "default": "otlp.eda.nokia.com/v1alpha1",
            "pattern": "^otlp\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to otlp.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterMetricExport",
            "pattern": "^ClusterMetricExport$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterMetricExport",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_metadata"
          },
          "spec": {
            "description": "ClusterMetricExportSpec defines the desired state of ClusterMetricExport",
            "properties": {
              "exports": {
                "description": "List of metrics and their sources to be written to a remote server.\nMetrics will be sent using the Prometheus remote write protocol.",
                "items": {
                  "properties": {
                    "attributes": {
                      "description": "Allows adding static or dynamic attributes to the metrics.",
                      "properties": {
                        "dynamic": {
                          "description": "List of dynamic attributes to add to the metrics, based on a state DB path.",
                          "items": {
                            "properties": {
                              "field": {
                                "description": "The field name to add as a attribute",
                                "title": "Field",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1200
                                }
                              },
                              "path": {
                                "description": "The state DB path to export, in the format '.node.srl.interface'",
                                "title": "Path",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1100
                                }
                              },
                              "regex": {
                                "description": "A regular expression to be applied to the field value.",
                                "title": "Regex",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1300
                                }
                              },
                              "replacement": {
                                "description": "A regular expression replacement to be applied to the field value.",
                                "title": "Replacement",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1400
                                }
                              }
                            },
                            "required": [
                              "field",
                              "path"
                            ],
                            "type": "object"
                          },
                          "title": "Dynamic Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1400
                          }
                        },
                        "static": {
                          "description": "List of static attributes to add to the metrics.",
                          "items": {
                            "properties": {
                              "metricAttribute": {
                                "description": "Metric Attribute",
                                "title": "Metric Attribute",
                                "type": "boolean",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 950
                                }
                              },
                              "name": {
                                "description": "Attribute name.",
                                "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
                                "title": "Name",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 800
                                }
                              },
                              "value": {
                                "description": "Attribute value.",
                                "title": "Value",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 900
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Static Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1300
                          }
                        }
                      },
                      "title": "Attributes",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 900
                      }
                    },
                    "fields": {
                      "description": "Optional set of fields to be exposed by this export.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of the field.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 100
                            }
                          },
                          "type": {
                            "default": "Gauge",
                            "description": "The type of the field.",
                            "enum": [
                              "Gauge",
                              "Sum"
                            ],
                            "title": "Type",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 200
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Fields",
                      "type": "array"
                    },
                    "interval": {
                      "description": "Period defines the frequency at which the metric is polled.",
                      "title": "Polling Interval",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 600
                      }
                    },
                    "mappings": {
                      "description": "Rules for mapping metric values (e.g., DOWN -\u003e 1, UP -\u003e 2).",
                      "items": {
                        "properties": {
                          "destination": {
                            "description": "The new value for the mapped source (must convert to float64).",
                            "pattern": "^-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$",
                            "title": "Mapped Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1200
                            }
                          },
                          "source": {
                            "description": "The value to be mapped (supports regex with capture groups).",
                            "title": "Source Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1100
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Metric Value Mappings",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 1000
                      }
                    },
                    "metricName": {
                      "description": "Regex and replacement for renaming the metric name.",
                      "properties": {
                        "regex": {
                          "description": "Regular expression for the metric name transformation.",
                          "title": "Metric Name Regex",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1500
                          }
                        },
                        "replacement": {
                          "description": "Replacement string for the transformed metric name.",
                          "title": "Metric Name Replacement",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1600
                          }
                        }
                      },
                      "title": "Metric Name Transformation",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 800
                      }
                    },
                    "mode": {
                      "default": "on-change",
                      "description": "Mode defines how the metric is collected: periodic, on-change, or periodic-on-change.",
                      "enum": [
                        "on-change",
                        "periodic",
                        "periodic-on-change"
                      ],
                      "title": "Collection Mode",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 700
                      }
                    },
                    "path": {
                      "description": "The state DB path to export, in the format '.node.srl.interface'",
                      "title": "Path",
                      "type": "string"
                    },
                    "resource": {
                      "description": "A Custom resource to be used as a source for the metric.\nIt will generate a metric with the CR attributes and a value of 1.",
                      "properties": {
                        "attributes": {
                          "description": "List of attributes to include with the metric.\nInclude all if not set.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 392
                          }
                        },
                        "group": {
                          "description": "The CR group such as `core.eda.nokia.com`.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370
                          }
                        },
                        "kind": {
                          "description": "The CR kind such as `toponode`.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390
                          }
                        },
                        "name": {
                          "description": "CR name to be queried.\nGet all of not set.",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 391
                          }
                        },
                        "namespace": {
                          "description": "The CR namespace, it defaults to all if not specified.",
                          "title": "Namespace",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 360
                          }
                        },
                        "version": {
                          "description": "The CR version such as `v1` or `v1alpha1`.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380
                          }
                        }
                      },
                      "title": "Custom Resource",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 350
                      }
                    },
                    "where": {
                      "description": "Condition for filtering the metric (e.g., 'oper-state = down').",
                      "title": "Where",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 500
                      }
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                },
                "title": "Metrics Exports",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "receivers": {
                "description": "List of remote destination names where metrics will be written.",
                "items": {
                  "type": "string"
                },
                "title": "Destination Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "otlp.eda.nokia.com",
                      "resource": "clusterreceivers",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 200
                }
              }
            },
            "required": [
              "exports",
              "receivers"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterMetricExportStatus defines the observed state of ClusterMetricExport",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterMetricExportList": {
        "description": "ClusterMetricExportList is a list of clustermetricexports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "otlp.eda.nokia.com",
                  "kind": "ClusterMetricExport",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterReceiver": {
        "description": "ClusterReceiver is the Schema for the clusterreceivers API",
        "properties": {
          "apiVersion": {
            "default": "otlp.eda.nokia.com/v1alpha1",
            "pattern": "^otlp\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to otlp.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterReceiver",
            "pattern": "^ClusterReceiver$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterReceiver",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver_metadata"
          },
          "spec": {
            "description": "ClusterReceiverSpec defines the desired state of ClusterReceiver",
            "properties": {
              "authorization": {
                "description": "Authorization token for accessing the server.",
                "properties": {
                  "credentials": {
                    "description": "Credentials such as a token value",
                    "title": "Credentials",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1001,
                      "ui-single-line-group": "Authorization"
                    }
                  },
                  "type": {
                    "default": "Bearer",
                    "description": "Authorization type",
                    "title": "Type",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1000,
                      "ui-single-line-group": "Authorization"
                    }
                  }
                },
                "title": "Authorization",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              },
              "endpoint": {
                "description": "Receiver endpoint.",
                "title": "Endpoint",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "protocol": {
                "default": "http",
                "description": "Export client protocol. Once of `http` or `grpc`.",
                "enum": [
                  "http",
                  "grpc"
                ],
                "title": "Protocol",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              },
              "tls": {
                "description": "TLS configuration for secure connection to the remote server.",
                "properties": {
                  "fromFiles": {
                    "description": "Certificates files.",
                    "properties": {
                      "caFile": {
                        "description": "Path to a certificate authority file.",
                        "title": "CA File",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      },
                      "certFile": {
                        "description": "The client certificate file location.",
                        "title": "Client Certificate",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "keyFile": {
                        "description": "The client private key location.",
                        "title": "Client Private Key",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "skipVerify": {
                        "description": "If true the client will not verify the server's certificate.",
                        "title": "Skip Verify",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      }
                    },
                    "title": "Certificates Files",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "fromSecret": {
                    "description": "Secret containing a `tls.crt`, a `tls.key` and a `ca.crt` keys.\nBoth `tls.crt` and `tls.key` must be present.\nIf `ca.crt` is not present and `.trustBundle` is not set\nthe remote server certificate is not verified.",
                    "title": "Certificates Secret",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "trustBundle": {
                    "description": "ConfigMap containing a set of trust bundles (key `trust-bundle.pem`) used to\nverify the remote server certificates.",
                    "title": "Trust Bundle",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "TLS Configuration",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400,
                  "ui-presence-toggle": true
                }
              },
              "writeOptions": {
                "description": "Remote write options such as: Flush interval, Retries, etc.",
                "properties": {
                  "bufferSize": {
                    "default": 1000,
                    "description": "The buffer size threshold that initiates sending the accumulated metrics to the receiver.",
                    "format": "int64",
                    "title": "Buffer Size",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "compression": {
                    "description": "Compression algorithm. Only gzip supported.",
                    "enum": [
                      "gzip"
                    ],
                    "title": "Compression",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 300
                    }
                  },
                  "flushInterval": {
                    "default": "5s",
                    "description": "Interval at which metrics stored in the local buffer are sent to the receiver.\nMetrics are sent regardless of the buffer size threshold.",
                    "title": "Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "headers": {
                    "description": "Custom HTTP headers to be sent along with each remote write request.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "Header name",
                          "title": "Name",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value",
                          "title": "Value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Headers",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 700
                    }
                  },
                  "maxMetricsPerExport": {
                    "default": 500,
                    "description": "Maximum number of metrics per export request.",
                    "format": "int64",
                    "title": "Max Metrics per export",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 620
                    }
                  },
                  "retries": {
                    "description": "Retries options",
                    "properties": {
                      "initialInterval": {
                        "type": "string"
                      },
                      "maxElapsedTime": {
                        "type": "string"
                      },
                      "maxInterval": {
                        "type": "string"
                      }
                    },
                    "title": "Retries",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 350
                    }
                  },
                  "timeout": {
                    "description": "Export timeout.",
                    "title": "Timeout",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 350
                    }
                  }
                },
                "required": [
                  "retries",
                  "timeout"
                ],
                "title": "Write Options",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              }
            },
            "required": [
              "endpoint",
              "protocol"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterReceiverStatus defines the observed state of ClusterReceiver",
            "properties": {
              "error": {
                "description": "Last encountered error for this receiver",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string"
              },
              "reachable": {
                "default": false,
                "description": "Specifies if the receiver is reachable",
                "title": "Reachable",
                "type": "boolean"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterReceiverList": {
        "description": "ClusterReceiverList is a list of clusterreceivers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterReceiver_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterReceiver_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.otlp.v1alpha1.ClusterReceiver_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "otlp.eda.nokia.com",
                  "kind": "ClusterReceiver",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.otlp.v1alpha1.MetricExport": {
        "description": "MetricExport is the Schema for the metricexports API",
        "properties": {
          "apiVersion": {
            "default": "otlp.eda.nokia.com/v1alpha1",
            "pattern": "^otlp\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to otlp.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "MetricExport",
            "pattern": "^MetricExport$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to MetricExport",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport_metadata"
          },
          "spec": {
            "description": "MetricExportSpec defines the desired state of MetricExport",
            "properties": {
              "exports": {
                "description": "List of metrics and their sources to be written to a remote server.\nMetrics will be sent using the Prometheus remote write protocol.",
                "items": {
                  "properties": {
                    "attributes": {
                      "description": "Allows adding static or dynamic attributes to the metrics.",
                      "properties": {
                        "dynamic": {
                          "description": "List of dynamic attributes to add to the metrics, based on a state DB path.",
                          "items": {
                            "properties": {
                              "field": {
                                "description": "The field name to add as a attribute",
                                "title": "Field",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1200
                                }
                              },
                              "path": {
                                "description": "The state DB path to export, in the format '.node.srl.interface'",
                                "title": "Path",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1100
                                }
                              },
                              "regex": {
                                "description": "A regular expression to be applied to the field value.",
                                "title": "Regex",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1300
                                }
                              },
                              "replacement": {
                                "description": "A regular expression replacement to be applied to the field value.",
                                "title": "Replacement",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1400
                                }
                              }
                            },
                            "required": [
                              "field",
                              "path"
                            ],
                            "type": "object"
                          },
                          "title": "Dynamic Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1400
                          }
                        },
                        "static": {
                          "description": "List of static attributes to add to the metrics.",
                          "items": {
                            "properties": {
                              "metricAttribute": {
                                "description": "Metric Attribute",
                                "title": "Metric Attribute",
                                "type": "boolean",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 950
                                }
                              },
                              "name": {
                                "description": "Attribute name.",
                                "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
                                "title": "Name",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 800
                                }
                              },
                              "value": {
                                "description": "Attribute value.",
                                "title": "Value",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 900
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Static Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1300
                          }
                        }
                      },
                      "title": "Attributes",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 900
                      }
                    },
                    "fields": {
                      "description": "Optional set of fields to be exposed by this export.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of the field.",
                            "title": "Name",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 100
                            }
                          },
                          "type": {
                            "default": "Gauge",
                            "description": "The type of the field.",
                            "enum": [
                              "Gauge",
                              "Sum"
                            ],
                            "title": "Type",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 200
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Fields",
                      "type": "array"
                    },
                    "interval": {
                      "description": "Period defines the frequency at which the metric is polled.",
                      "title": "Polling Interval",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 600
                      }
                    },
                    "mappings": {
                      "description": "Rules for mapping metric values (e.g., DOWN -\u003e 1, UP -\u003e 2).",
                      "items": {
                        "properties": {
                          "destination": {
                            "description": "The new value for the mapped source (must convert to float64).",
                            "pattern": "^-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$",
                            "title": "Mapped Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1200
                            }
                          },
                          "source": {
                            "description": "The value to be mapped (supports regex with capture groups).",
                            "title": "Source Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1100
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Metric Value Mappings",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 1000
                      }
                    },
                    "metricName": {
                      "description": "Regex and replacement for renaming the metric name.",
                      "properties": {
                        "regex": {
                          "description": "Regular expression for the metric name transformation.",
                          "title": "Metric Name Regex",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1500
                          }
                        },
                        "replacement": {
                          "description": "Replacement string for the transformed metric name.",
                          "title": "Metric Name Replacement",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1600
                          }
                        }
                      },
                      "title": "Metric Name Transformation",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 800
                      }
                    },
                    "mode": {
                      "default": "on-change",
                      "description": "Mode defines how the metric is collected: periodic, on-change, or periodic-on-change.",
                      "enum": [
                        "on-change",
                        "periodic",
                        "periodic-on-change"
                      ],
                      "title": "Collection Mode",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 700
                      }
                    },
                    "path": {
                      "description": "The state DB path to export, in the format '.node.srl.interface'",
                      "title": "Path",
                      "type": "string"
                    },
                    "resource": {
                      "description": "A Custom resource to be used as a source for the metric.\nIt will generate a metric with the CR attributes and a value of 1.",
                      "properties": {
                        "attributes": {
                          "description": "List of attributes to include with the metric.\nInclude all if not set.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Attributes",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 392
                          }
                        },
                        "group": {
                          "description": "The CR group such as `core.eda.nokia.com`.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370
                          }
                        },
                        "kind": {
                          "description": "The CR kind such as `toponode`.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390
                          }
                        },
                        "name": {
                          "description": "CR name to be queried.\nGet all of not set.",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 391
                          }
                        },
                        "version": {
                          "description": "The CR version such as `v1` or `v1alpha1`.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380
                          }
                        }
                      },
                      "title": "Custom Resource",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 350
                      }
                    },
                    "where": {
                      "description": "Condition for filtering the metric (e.g., 'oper-state = down').",
                      "title": "Where",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 500
                      }
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                },
                "title": "Metrics Exports",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "receivers": {
                "description": "List of remote destination names where metrics will be written.",
                "items": {
                  "type": "string"
                },
                "title": "Destination Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "otlp.eda.nokia.com",
                      "resource": "receivers",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 200
                }
              }
            },
            "required": [
              "exports",
              "receivers"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "MetricExportStatus defines the observed state of MetricExport",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.MetricExportList": {
        "description": "MetricExportList is a list of metricexports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.MetricExport_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.MetricExport_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.otlp.v1alpha1.MetricExport_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "otlp.eda.nokia.com",
                  "kind": "MetricExport",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.otlp.v1alpha1.Receiver": {
        "description": "Receiver is the Schema for the receivers API",
        "properties": {
          "apiVersion": {
            "default": "otlp.eda.nokia.com/v1alpha1",
            "pattern": "^otlp\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to otlp.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Receiver",
            "pattern": "^Receiver$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Receiver",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver_metadata"
          },
          "spec": {
            "description": "ReceiverSpec defines the desired state of Receiver",
            "properties": {
              "authorization": {
                "description": "Authorization token for accessing the server.",
                "properties": {
                  "credentials": {
                    "description": "Credentials such as a token value",
                    "title": "Credentials",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1001,
                      "ui-single-line-group": "Authorization"
                    }
                  },
                  "type": {
                    "default": "Bearer",
                    "description": "Authorization type",
                    "title": "Type",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1000,
                      "ui-single-line-group": "Authorization"
                    }
                  }
                },
                "title": "Authorization",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              },
              "endpoint": {
                "description": "Receiver endpoint.",
                "title": "Endpoint",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "protocol": {
                "default": "http",
                "description": "Export client protocol. Once of `http` or `grpc`.",
                "enum": [
                  "http",
                  "grpc"
                ],
                "title": "Protocol",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              },
              "tls": {
                "description": "TLS configuration for secure connection to the remote server.",
                "properties": {
                  "fromFiles": {
                    "description": "Certificates files.",
                    "properties": {
                      "caFile": {
                        "description": "Path to a certificate authority file.",
                        "title": "CA File",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      },
                      "certFile": {
                        "description": "The client certificate file location.",
                        "title": "Client Certificate",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "keyFile": {
                        "description": "The client private key location.",
                        "title": "Client Private Key",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "skipVerify": {
                        "description": "If true the client will not verify the server's certificate.",
                        "title": "Skip Verify",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      }
                    },
                    "title": "Certificates Files",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "fromSecret": {
                    "description": "Secret containing a `tls.crt`, a `tls.key` and a `ca.crt` keys.\nBoth `tls.crt` and `tls.key` must be present.\nIf `ca.crt` is not present and `.trustBundle` is not set\nthe remote server certificate is not verified.",
                    "title": "Certificates Secret",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "trustBundle": {
                    "description": "ConfigMap containing a set of trust bundles (key `trust-bundle.pem`) used to\nverify the remote server certificates.",
                    "title": "Trust Bundle",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "TLS Configuration",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400,
                  "ui-presence-toggle": true
                }
              },
              "writeOptions": {
                "description": "Remote write options such as: Flush interval, Retries, etc.",
                "properties": {
                  "bufferSize": {
                    "default": 1000,
                    "description": "The buffer size threshold that initiates sending the accumulated metrics to the receiver.",
                    "format": "int64",
                    "title": "Buffer Size",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "compression": {
                    "description": "Compression algorithm. Only gzip supported.",
                    "enum": [
                      "gzip"
                    ],
                    "title": "Compression",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 300
                    }
                  },
                  "flushInterval": {
                    "default": "5s",
                    "description": "Interval at which metrics stored in the local buffer are sent to the receiver.\nMetrics are sent regardless of the buffer size threshold.",
                    "title": "Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "headers": {
                    "description": "Custom HTTP headers to be sent along with each remote write request.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "Header name",
                          "title": "Name",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value",
                          "title": "Value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Headers",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 700
                    }
                  },
                  "maxMetricsPerExport": {
                    "default": 500,
                    "description": "Maximum number of metrics per export request.",
                    "format": "int64",
                    "title": "Max Metrics per export",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 620
                    }
                  },
                  "retries": {
                    "description": "Retries options",
                    "properties": {
                      "initialInterval": {
                        "type": "string"
                      },
                      "maxElapsedTime": {
                        "type": "string"
                      },
                      "maxInterval": {
                        "type": "string"
                      }
                    },
                    "title": "Retries",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 350
                    }
                  },
                  "timeout": {
                    "description": "Export timeout.",
                    "title": "Timeout",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 350
                    }
                  }
                },
                "required": [
                  "retries",
                  "timeout"
                ],
                "title": "Write Options",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              }
            },
            "required": [
              "endpoint",
              "protocol"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ReceiverStatus defines the observed state of Receiver",
            "properties": {
              "error": {
                "description": "Last encountered error for this receiver",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string"
              },
              "reachable": {
                "default": false,
                "description": "Specifies if the receiver is reachable",
                "title": "Reachable",
                "type": "boolean"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.ReceiverList": {
        "description": "ReceiverList is a list of receivers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.Receiver_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.otlp.v1alpha1.Receiver_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.otlp.v1alpha1.Receiver_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "otlp.eda.nokia.com",
                  "kind": "Receiver",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "OTLP Exporter Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/otlp.eda.nokia.com": {
      "get": {
        "description": "list versions available from otlp.eda.nokia.com",
        "operationId": "getVersionOtlpEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from otlp.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesOtlpEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for otlp.eda.nokia.com v1alpha1",
        "operationId": "uiOtlpEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clustermetricexports": {
      "delete": {
        "description": "Delete all instances of ClusterMetricExport.  If ClusterMetricExport is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterMetricExport, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clustermetricexports",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterMetricExport",
        "operationId": "createOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clustermetricexports/_deleted": {
      "get": {
        "operationId": "getDeletedOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterMetricExport that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clustermetricexports/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterMetricExport",
        "operationId": "deleteOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "name of the ClusterMetricExport to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterMetricExport.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "name of the ClusterMetricExport",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterMetricExport",
        "operationId": "patchOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterMetricExport",
        "operationId": "replaceOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterMetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clustermetricexports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "name of the ClusterMetricExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterMetricExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clustermetricexports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyOtlpEdaNokiaComV1alpha1Clustermetricexports",
        "parameters": [
          {
            "description": "name of the ClusterMetricExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterMetricExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clusterreceivers": {
      "delete": {
        "description": "Delete all instances of ClusterReceiver.  If ClusterReceiver is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterReceiver, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiverList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiverList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterreceivers",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterReceiver",
        "operationId": "createOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clusterreceivers/_deleted": {
      "get": {
        "operationId": "getDeletedOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterReceiver that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clusterreceivers/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterReceiver",
        "operationId": "deleteOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "name of the ClusterReceiver to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterReceiver.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "name of the ClusterReceiver",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterReceiver",
        "operationId": "patchOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterReceiver",
        "operationId": "replaceOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ClusterReceiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clusterreceivers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "name of the ClusterReceiver to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterReceiver.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/clusterreceivers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyOtlpEdaNokiaComV1alpha1Clusterreceivers",
        "parameters": [
          {
            "description": "name of the ClusterReceiver to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterReceiver.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/metricexports": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1Metricexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list metricexports",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/metricexports": {
      "delete": {
        "operationId": "deleteAllOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of MetricExport in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list metricexports in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a MetricExport",
        "operationId": "createOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/metricexports/_deleted": {
      "get": {
        "operationId": "getDeletedOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of MetricExport that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/metricexports/{name}": {
      "delete": {
        "description": "delete the specified MetricExport",
        "operationId": "deleteOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the MetricExport to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified MetricExport.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "name of the MetricExport",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a MetricExport",
        "operationId": "patchOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a MetricExport",
        "operationId": "replaceOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.MetricExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/metricexports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "name of the MetricExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced MetricExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/metricexports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyOtlpEdaNokiaComV1alpha1NamespaceMetricexports",
        "parameters": [
          {
            "description": "name of the MetricExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced MetricExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/receivers": {
      "delete": {
        "operationId": "deleteAllOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ReceiverList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Receiver in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ReceiverList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list receivers in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Receiver",
        "operationId": "createOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/receivers/_deleted": {
      "get": {
        "operationId": "getDeletedOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Receiver that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/receivers/{name}": {
      "delete": {
        "description": "delete the specified Receiver",
        "operationId": "deleteOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Receiver to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Receiver.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "name of the Receiver",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Receiver",
        "operationId": "patchOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Receiver",
        "operationId": "replaceOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.Receiver"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/receivers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "name of the Receiver to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Receiver.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/namespaces/{namespace}/receivers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyOtlpEdaNokiaComV1alpha1NamespaceReceivers",
        "parameters": [
          {
            "description": "name of the Receiver to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Receiver.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/otlp.eda.nokia.com/v1alpha1/receivers": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listOtlpEdaNokiaComV1alpha1Receivers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.otlp.v1alpha1.ReceiverList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list receivers",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}